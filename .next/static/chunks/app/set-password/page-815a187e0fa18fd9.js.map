{"version":3,"file":"static/chunks/app/set-password/page-815a187e0fa18fd9.js","mappings":"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","sources":["webpack://_N_E/?a1c2","webpack://_N_E/?4a85","webpack://_N_E/?33f3","webpack://_N_E/./components/forms/passwordForm.tsx","webpack://_N_E/./components/layouts/Backdrop.tsx","webpack://_N_E/./components/ui/Button.tsx","webpack://_N_E/./utils/customError.ts","webpack://_N_E/./lib/zod/handleError.ts","webpack://_N_E/./lib/zod/zodSchemas.ts","webpack://_N_E/./utils/getFormDataValue.ts"],"sourcesContent":["import(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"C:\\\\Users\\\\User\\\\Documents\\\\Hi world\\\\ADRAR 2024\\\\Fil Rouge\\\\components\\\\forms\\\\passwordForm.tsx\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"C:\\\\Users\\\\User\\\\Documents\\\\Hi world\\\\ADRAR 2024\\\\Fil Rouge\\\\components\\\\layouts\\\\Backdrop.tsx\");\n","import { createServerReference, callServer, findSourceMapURL } from 'private-next-rsc-action-client-wrapper'\nexport const checkPassword = /*#__PURE__*/createServerReference(\"7faaecf046cb5b8d941bfcfad4c2bd225f09d86dba\", callServer, undefined, findSourceMapURL, \"checkPassword\")","import { createServerReference, callServer, findSourceMapURL } from 'private-next-rsc-action-client-wrapper'\nexport const updatePassword = /*#__PURE__*/createServerReference(\"7ff9d91c13361dc3a4dd24a54556883017b4825aa1\", callServer, undefined, findSourceMapURL, \"updatePassword\")","'use client';\r\n\r\nimport { checkPassword } from '@/actions/userServerActions/checkPassword';\r\nimport { updatePassword } from '@/actions/userServerActions/updatePassword';\r\nimport { handleError } from '@/lib/zod/handleError';\r\nimport {\r\n  passwordRegex,\r\n  passwordRegexMessage,\r\n  passwordSchema,\r\n} from '@/lib/zod/zodSchemas';\r\nimport { getFormDataStringValue } from '@/utils/getFormDataValue';\r\nimport { Input, PasswordInput } from 'facu-ui';\r\nimport { useSession } from 'next-auth/react';\r\nimport { useRouter } from 'next/navigation';\r\nimport React, { useState, useTransition } from 'react';\r\nimport { toast } from 'sonner';\r\nimport Button from '../ui/Button';\r\n\r\ntype PasswordFormProps = {\r\n  id: string;\r\n  isUpdate: boolean;\r\n};\r\nexport default function PasswordForm({ id, isUpdate }: PasswordFormProps) {\r\n  const { update, data: session } = useSession();\r\n\r\n  const router = useRouter();\r\n  const [isPending, startTransition] = useTransition();\r\n  const [passwordChecked, setPasswordChecked] = useState(!isUpdate);\r\n  const [error, setError] = useState({\r\n    password: { message: '', value: false },\r\n    oldPassword: { message: '', value: false },\r\n  });\r\n\r\n  const checkOldPassword = async (password: string) => {\r\n    if (!password) {\r\n      setError({\r\n        ...error,\r\n        oldPassword: { message: 'Mot de passe manquant', value: true },\r\n      });\r\n      setPasswordChecked(false);\r\n      return;\r\n    }\r\n    startTransition(async () => {\r\n      if (!session?.user.email) {\r\n        setError((prev) => ({\r\n          ...prev,\r\n          oldPassword: { message: 'Utilisateur non connecte', value: true },\r\n        }));\r\n        return;\r\n      }\r\n      try {\r\n        passwordSchema.safeParse({ password });\r\n        const result = await checkPassword({\r\n          inputPassword: password,\r\n          email: session.user.email,\r\n        });\r\n        if (!result) {\r\n          setError((prev) => ({\r\n            ...prev,\r\n            oldPassword: {\r\n              message: 'Ancien mot de passe incorrect',\r\n              value: true,\r\n            },\r\n          }));\r\n          setPasswordChecked(false);\r\n        } else {\r\n          setPasswordChecked(true);\r\n          setError({\r\n            password: { message: '', value: false },\r\n            oldPassword: { message: '', value: false },\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error checking old password:', error);\r\n        setError((prev) => ({\r\n          ...prev,\r\n          oldPassword: {\r\n            message: 'Erreur lors de la vérification',\r\n            value: true,\r\n          },\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setError({\r\n      password: { message: '', value: false },\r\n      oldPassword: { message: '', value: false },\r\n    });\r\n    if (!passwordChecked) {\r\n      setError({\r\n        ...error,\r\n        oldPassword: { message: 'Mot de passe manquant', value: true },\r\n      });\r\n    }\r\n\r\n    const formData = new FormData(e.currentTarget);\r\n\r\n    const password = getFormDataStringValue(formData, 'password');\r\n    const confirmPassword = getFormDataStringValue(formData, 'confirmPassword');\r\n\r\n    if (password !== confirmPassword) {\r\n      setError({\r\n        ...error,\r\n        password: {\r\n          message: 'Les mots de passe ne correspondent pas',\r\n          value: true,\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      passwordSchema.parse({ password });\r\n      startTransition(async () => {\r\n        const result = await updatePassword(formData);\r\n        if (result?.ok) {\r\n          await update({ hasPassword: true });\r\n          router.push('/profile');\r\n          toast.success('Mot de passe modifié');\r\n        } else {\r\n          setError({\r\n            ...error,\r\n            password: { message: result?.message as string, value: true },\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      const errorHandled = handleError(error);\r\n      console.log({ errorHandled });\r\n      setError({\r\n        password: {\r\n          message: errorHandled.message,\r\n          value: true,\r\n        },\r\n        oldPassword: { message: '', value: false },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"primary-form\" onSubmit={handleSubmit}>\r\n      <input type=\"hidden\" name=\"id\" value={id} />\r\n\r\n      {isUpdate && (\r\n        <Input\r\n          className=\"primary-input\"\r\n          autoFocus={isUpdate}\r\n          onBlur={(e) => checkOldPassword(e.target.value)}\r\n          required={true}\r\n          label=\"Ancien mot de passe\"\r\n          type=\"password\"\r\n          name=\"oldPassword\"\r\n          placeholder=\"Mot de passe\"\r\n          disabled={isPending}\r\n          autoComplete=\"current-password\"\r\n          success={{\r\n            message: 'Mot de passe vérifié',\r\n            value: passwordChecked,\r\n          }}\r\n          error={{\r\n            message: error.oldPassword?.message,\r\n            value: error.oldPassword?.value,\r\n          }}\r\n        />\r\n      )}\r\n\r\n      <PasswordInput\r\n        autoFocus={!isUpdate}\r\n        regexp={{\r\n          message: passwordRegexMessage,\r\n          pattern: passwordRegex,\r\n        }}\r\n        label=\"Nouveau mot de passe\"\r\n        className=\"primary-input\"\r\n        name=\"password\"\r\n        placeholder=\"Nouveau mot de passe\"\r\n        disabled={!passwordChecked}\r\n      />\r\n      <PasswordInput\r\n        disabled={!passwordChecked}\r\n        className=\"primary-input\"\r\n        label=\"Confirmer le mot de passe\"\r\n        name=\"confirmPassword\"\r\n        placeholder=\"Confirmer le mot de passe\"\r\n        error={{\r\n          message: error.password?.message,\r\n          value: error.password?.value,\r\n        }}\r\n      />\r\n      <Button type=\"submit\" disabled={isPending || !passwordChecked}>\r\n        {isUpdate ? 'Modifier mot de passe' : 'Créer un mot de passe'}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n","'use client';\r\nimport React, { useEffect } from 'react';\r\n\r\nexport default function Backdrop({ children }: { children: React.ReactNode }) {\r\n  useEffect(() => {\r\n    document.body.classList.add('no-scroll');\r\n    return () => {\r\n      document.body.classList.remove('no-scroll');\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"no-scrollbar pt-[100px] fixed inset-0 z-50 bg-black/50 backdrop-blur-sm flex items-center justify-center overflow-y-scroll\">\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","'use client';\r\n\r\nimport React from 'react';\r\n\r\ntype ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement> & {\r\n  onClick?: () => void;\r\n  /** The width of the button, default is fit-content */\r\n  width?: string;\r\n  /** The type of button */\r\n  type?: 'button' | 'submit' | 'reset';\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport default function Button({\r\n  onClick,\r\n  width,\r\n  children,\r\n  type,\r\n}: ButtonProps) {\r\n  return (\r\n    <button\r\n      type={type || 'button'}\r\n      style={{ width: width || 'fit-content' }}\r\n      onClick={onClick}\r\n      className=\"inline-flex items-center justify-center px-4 py-1 border-2 text-lg rounded-lg bg-light-yellow text-dark-bg font-bold border-dark-bg hover:shadow-lg  transition-transform duration-300 ease-in-out \"\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n","/**\r\n * Represents a custom error that extends the built-in `Error` class.\r\n * This class allows for additional structured error information.\r\n *\r\n * @template T - The type of additional error details (e.g., validation errors).\r\n */\r\nclass CustomError<T = unknown> extends Error {\r\n  /**\r\n   * Indicates that the operation was not successful.\r\n   * Always `false` for instances of `CustomError`.\r\n   */\r\n  public ok: boolean;\r\n\r\n  /**\r\n   * A error message describing the issue.\r\n   */\r\n  public message: string;\r\n\r\n  /**\r\n   * Additional error details, such as validation errors or metadata.\r\n   * This field is optional.\r\n   */\r\n  public errors?: T;\r\n\r\n  /**\r\n   * Creates an instance of `CustomError`.\r\n   *\r\n   * @param {string} message - A descriptive error message.\r\n   * @param {T} [errors] - Optional additional error details.\r\n   */\r\n  constructor(message: string, errors?: T) {\r\n    super(message);\r\n    this.name = this.constructor.name;\r\n    this.ok = false;\r\n    this.message = message;\r\n    this.errors = errors;\r\n  }\r\n}\r\n\r\nexport default CustomError;\r\n","import CustomError from '@/utils/customError';\r\nimport { ZodError } from 'zod';\r\n\r\n// This interface is used by the handleError function to type the error object\r\nexport interface ValidationError {\r\n  message: string;\r\n  path: (string | number)[];\r\n}\r\n\r\n/**\r\n * Handles errors and converts them into a standardized `CustomError` instance.\r\n * Supports both generic errors and `ZodError` validation errors.\r\n * *\r\n * @param {unknown} error - The error to handle. This can be any type of error, including validation errors from Zod.\r\n * @returns {CustomError<ValidationError[]>} A structured `CustomError` instance containing:\r\n *   - `message`: A general error message, which may describe validation errors or a generic issue.\r\n *   - `errors`: An array of validation errors if the error is a `ZodError`; otherwise, it is undefined.\r\n *\r\n * @example\r\n * try {\r\n *   schema.parse(data);\r\n * } catch (error) {\r\n *   return handleError(error);\r\n * }\r\n */\r\nexport function handleError(error: unknown): CustomError<ValidationError[]> {\r\n  if (error instanceof ZodError) {\r\n    // Extract validation errors from Zod\r\n    const validationErrors: ValidationError[] = error.errors.map(\r\n      ({ message, path }) => ({\r\n        message,\r\n        path,\r\n      })\r\n    );\r\n\r\n    // Create an instance of CustomError with the validation error details\r\n    const message = validationErrors.map((e) => e.message).join(', ');\r\n    return new CustomError<ValidationError[]>(message, validationErrors);\r\n  }\r\n\r\n  // For other errors, generate a CustomError with a generic message\r\n  return new CustomError<ValidationError[]>('Une erreur est survenue');\r\n}\r\n","import { z } from 'zod';\r\n\r\nexport const emailSchema = z.object({\r\n  email: z\r\n    .string()\r\n    .email({ message: 'Veuillez utiliser une adresse e-mail valide' }),\r\n});\r\n\r\nexport const passwordRegex =\r\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#@$!%*?&])[A-Za-z\\d#@$!%*?&]{8,30}$/;\r\n\r\nexport const passwordRegexMessage =\r\n  '8 caractères, une majuscule, une minuscule, un chiffre et un caractère spécial, \\' \" _ - ne sont pas autorisés';\r\n\r\nexport const passwordSchema = z.object({\r\n  password: z\r\n    .string()\r\n    .min(8, { message: 'Le mot de passe doit être de 8 caractères minimum' })\r\n    .max(30, { message: 'Le mot de passe doit être de 30 caractères maximum' })\r\n    .regex(passwordRegex, {\r\n      message: passwordRegexMessage,\r\n    }),\r\n});\r\n\r\nexport const signUpSchema = z.object({\r\n  email: z\r\n    .string()\r\n    .email({ message: 'Veuillez utiliser une adresse e-mail valide' }),\r\n});\r\n\r\nexport const eventAddressSchema = z.object({\r\n  url: z.string().url(),\r\n  lat: z.number(),\r\n  lng: z.number(),\r\n  formattedAddress: z.string(),\r\n  vicinity: z.string(),\r\n});\r\n\r\nexport const newEventSchema = z.object({\r\n  categoryId: z.string(),\r\n  title: z\r\n    .string()\r\n    .max(100, { message: 'Le titre doit être de 100 caractères maximum' }),\r\n  description: z\r\n    .string()\r\n    .min(30, {\r\n      message: \"Il faut un peu de l'inspiration pour cette description!\",\r\n    })\r\n    .max(1000, {\r\n      message: 'La description doit être de 1000 caractères maximum',\r\n    }),\r\n  eventStart: z.date().refine(\r\n    (value) => {\r\n      const date = value;\r\n      const now = new Date();\r\n      return !isNaN(date.getTime()) && date >= now;\r\n    },\r\n    {\r\n      message: 'La date doit être valide et ne peut pas être dans le passé',\r\n    }\r\n  ),\r\n  eventEnd: z\r\n    .date()\r\n    .nullable()\r\n    .refine(\r\n      (value) => {\r\n        if (!value) return true;\r\n        const date = value;\r\n        const now = new Date();\r\n        return !isNaN(date.getTime()) && date >= now;\r\n      },\r\n      {\r\n        message: 'La date doit être valide et ne peut pas être dans le passé',\r\n      }\r\n    ),\r\n  isPublic: z.boolean(),\r\n  participants: z.array(z.string()),\r\n  address: eventAddressSchema,\r\n  image: z.instanceof(File),\r\n});\r\n\r\n// Generar el tipo TypeScript a partir del esquema\r\nexport type NewEventForm = z.infer<typeof newEventSchema>;\r\n\r\nconst validCategoryTitles = [\r\n  'sport',\r\n  'education',\r\n  'language',\r\n  'city tours',\r\n  'air libre',\r\n  'autres',\r\n];\r\n\r\nexport const categoryTitleSchema = z\r\n  .string()\r\n  .regex(new RegExp(`^(${validCategoryTitles.join('|')})$`), {\r\n    message: 'Titre invalide',\r\n  });\r\n\r\n// participants: z.array(z.string()).optional(),\r\n// TODO: ADD EDIT PROFILE SCHEMA\r\n\r\n/* \r\n=========================================================\r\n============ USER SERVICES OUTPUT SCHEMAS ===============\r\n=========================================================\r\n*/\r\nconst MAX_FILE_SIZE = 2 * 1024 * 1024; // 2MB\r\nexport const updateUserSchema = z.object({\r\n  username: z\r\n    .string()\r\n    .max(30, \"Le nom d'utilisateur doit comporter 30 caractères ou moins\")\r\n    .optional(),\r\n  image: z\r\n    .union([\r\n      z.instanceof(File).refine((file) => file.size <= MAX_FILE_SIZE, {\r\n        message: \"La taille de l'image doit être de 2 Mo ou moins\",\r\n      }),\r\n      z.null(),\r\n      z.undefined(),\r\n    ])\r\n    .optional(),\r\n  description: z\r\n    .string()\r\n    .max(1000, 'La description doit comporter 1000 caractères ou moins')\r\n    .optional(),\r\n  oldImage: z.string().optional(),\r\n});\r\n\r\nexport const getUserServiceSchema = z.object({\r\n  id: z.string(),\r\n  email: z.string().email().nullable(),\r\n  username: z.string().nullable(),\r\n  image: z.string().nullable(),\r\n  description: z.string().nullable(),\r\n  _count: z.object({\r\n    Ratings: z.number(),\r\n    EventsCreated: z.number(),\r\n  }),\r\n});\r\nexport type getUserServiceType = z.infer<typeof getUserServiceSchema>;\r\n\r\nexport const getAllUsersServiceSchema = z.array(getUserServiceSchema);\r\n","/**\r\n * Retrieves a string value from a FormData object. If the value is a string, it trims any extra whitespace.\r\n * If the key does not exist or the value is not a string, it returns null.\r\n *\r\n * @param {FormData} formData - The FormData object containing the form data.\r\n * @param {string} key - The key corresponding to the desired string value.\r\n * @returns {string | null} - The trimmed string value or null if the key is not found or the value is not a string.\r\n */\r\nexport const getFormDataStringValue = (\r\n  formData: FormData,\r\n  key: string\r\n): string => {\r\n  const value = formData.get(key);\r\n  if (typeof value === 'string') {\r\n    return value.trim();\r\n  }\r\n  return '';\r\n};\r\n\r\n/**\r\n * Retrieves a File object from a FormData object. If the value is a File, it returns the File object.\r\n * If the key does not exist or the value is not a File, it returns null.\r\n *\r\n * @param {FormData} formData - The FormData object containing the form data.\r\n * @param {string} key - The key corresponding to the desired File object.\r\n * @returns {File | null} - The File object or null if the key is not found or the value is not a File.\r\n */\r\nexport const getFormDataFileValue = (\r\n  formData: FormData,\r\n  key: string\r\n): File | null => {\r\n  const value = formData.get(key);\r\n  if (value instanceof File) {\r\n    return value;\r\n  }\r\n  return null;\r\n};\r\n"],"names":["PasswordForm","error","id","isUpdate","update","data","session","useSession","router","useRouter","isPending","startTransition","useTransition","passwordChecked","setPasswordChecked","useState","setError","password","message","value","oldPassword","checkOldPassword","user","email","prev","passwordSchema","safeParse","checkPassword","inputPassword","console","handleSubmit","e","preventDefault","formData","FormData","currentTarget","getFormDataStringValue","confirmPassword","parse","result","updatePassword","ok","hasPassword","push","toast","success","errorHandled","handleError","log","form","className","onSubmit","input","type","name","Input","autoFocus","onBlur","target","required","label","placeholder","disabled","autoComplete","PasswordInput","regexp","passwordRegexMessage","pattern","passwordRegex","Button","Backdrop","children","useEffect","document","body","classList","add","remove","div","onClick","width","button","style","CustomError","Error","constructor","errors","ZodError","validationErrors","map","path","join","emailSchema","z","object","string","min","max","regex","eventAddressSchema","url","lat","number","lng","formattedAddress","vicinity","categoryId","title","description","eventStart","date","refine","now","Date","isNaN","getTime","eventEnd","nullable","isPublic","boolean","participants","array","address","image","instanceof","File","RegExp","validCategoryTitles","updateUserSchema","username","optional","union","file","size","MAX_FILE_SIZE","null","undefined","oldImage","getUserServiceSchema","_count","Ratings","EventsCreated","key","get","trim"],"sourceRoot":"","ignoreList":[]}