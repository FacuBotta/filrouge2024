{"version":3,"file":"static/chunks/app/events/new/page-add8ebd59750d04d.js","mappings":"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","sources":["webpack://_N_E/?1162","webpack://_N_E/?217d","webpack://_N_E/./app/events/new/newEventPage.tsx","webpack://_N_E/./components/forms/SelectUserList.tsx","webpack://_N_E/./components/ui/cards/AutocompleteMapCard.tsx","webpack://_N_E/./lib/zod/zodSchemas.ts","webpack://_N_E/../../src/client/use-merged-ref.ts","webpack://_N_E/./public/images/UserAvatar.tsx"],"sourcesContent":["import(/* webpackMode: \"eager\", webpackExports: [\"NewEventPage\"] */ \"C:\\\\Users\\\\User\\\\Documents\\\\Hi world\\\\ADRAR 2024\\\\Fil Rouge\\\\app\\\\events\\\\new\\\\newEventPage.tsx\");\n","import { createServerReference, callServer, findSourceMapURL } from 'private-next-rsc-action-client-wrapper'\nexport const createEvent = /*#__PURE__*/createServerReference(\"7f238c1258a29ee39d5f388db219007640a62450c7\", callServer, undefined, findSourceMapURL, \"createEvent\")","'use client';\r\n\r\nimport { createEvent } from '@/actions/eventsServerActions/createEvent';\r\nimport SelectUserList from '@/components/forms/SelectUserList';\r\nimport AutocompletedMapCard from '@/components/ui/cards/AutocompleteMapCard';\r\nimport { NewEventForm, newEventSchema } from '@/lib/zod/zodSchemas';\r\nimport { BasicProfileInformation, EventAddress } from '@/types/types';\r\nimport { Category } from '@prisma/client';\r\nimport { Icon } from 'facu-ui';\r\nimport { useRouter } from 'next/navigation';\r\nimport React, { useRef, useState } from 'react';\r\nimport { toast } from 'sonner';\r\nimport { z } from 'zod';\r\nexport const NewEventPage = ({\r\n  availableCategories,\r\n  contacts,\r\n}: {\r\n  availableCategories: Category[];\r\n  contacts: BasicProfileInformation[];\r\n}) => {\r\n  // const [isPending, startTransition] = useTransition();\r\n  const [error, setError] = useState({\r\n    title: { message: '', value: false },\r\n    category: { message: '', value: false },\r\n    eventStart: { message: '', value: false },\r\n    eventEnd: { message: '', value: false },\r\n    description: { message: '', value: false },\r\n    address: { message: '', value: false },\r\n    image: { message: '', value: false },\r\n  });\r\n  const router = useRouter();\r\n  const imageInputRef = useRef<HTMLInputElement>(null);\r\n  const [finalAddress, setFinalAddress] = useState<EventAddress | null>(null);\r\n  const [imagePreview, setImagePreview] = useState<string | null>(null);\r\n  const [isUserListOpen, setIsUserListOpen] = useState(false);\r\n  const [selectedParticipants, setSelectedParticipants] = useState<string[]>(\r\n    []\r\n  );\r\n  // Prevent accidentals submit when pressing enter in the form\r\n  // e.preventDefault() wasn't enough to make it work\r\n  const handleKeyDownImageInput = (\r\n    e: React.KeyboardEvent<HTMLInputElement>\r\n  ) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n    }\r\n  };\r\n  const handleImagePreview = () => {\r\n    setError({\r\n      ...error,\r\n      image: { message: '', value: false },\r\n    });\r\n    setImagePreview('');\r\n    if (imageInputRef.current) {\r\n      const file = imageInputRef.current.files?.[0];\r\n      if (!file) return;\r\n      if (file.size > 2000000) {\r\n        setError({\r\n          ...error,\r\n          image: { message: 'La taille du fichier dépasse 2Mo !', value: true },\r\n        });\r\n        imageInputRef.current.value = '';\r\n        return;\r\n      }\r\n      if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          setImagePreview(e.target?.result as string);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    }\r\n  };\r\n  // Take the selected users and close the modal\r\n  const setSelectedUsers = (selectedUsers: string[]) => {\r\n    setSelectedParticipants(selectedUsers);\r\n    setIsUserListOpen(false);\r\n  };\r\n  const closeModal = () => {\r\n    setSelectedParticipants([]);\r\n    setIsUserListOpen(!isUserListOpen);\r\n  };\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setError({\r\n      title: { message: '', value: false },\r\n      category: { message: '', value: false },\r\n      eventStart: { message: '', value: false },\r\n      eventEnd: { message: '', value: false },\r\n      description: { message: '', value: false },\r\n      address: { message: '', value: false },\r\n      image: { message: '', value: false },\r\n    });\r\n    if (!finalAddress) {\r\n      setError({\r\n        ...error,\r\n        address: { message: 'Ubication obligatoire', value: true },\r\n      });\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData(e.currentTarget);\r\n\r\n    const endSameDay = formData.get('endSameDay') === 'on';\r\n    if (!endSameDay && formData.get('eventEnd') === '') {\r\n      setError({\r\n        ...error,\r\n        eventEnd: { message: 'La date de fin est obligatoire', value: true },\r\n      });\r\n      return;\r\n    }\r\n    console.log(formData.get('category'));\r\n    if (formData.get('category') === 'Catégorie') {\r\n      setError({\r\n        ...error,\r\n        category: { message: 'La catégorie est obligatoire', value: true },\r\n      });\r\n      return;\r\n    }\r\n\r\n    const eventData: NewEventForm = {\r\n      title: formData.get('title') as string,\r\n      categoryId: formData.get('category') as string,\r\n      isPublic: formData.get('isPublic') === 'on',\r\n      image: formData.get('image') as File,\r\n      eventStart: new Date(formData.get('eventStart') as string),\r\n      eventEnd: endSameDay\r\n        ? null\r\n        : new Date(formData.get('eventEnd') as string),\r\n      description: formData.get('description') as string,\r\n      participants: selectedParticipants,\r\n      address: {\r\n        url: finalAddress.url as string,\r\n        lat: finalAddress.lat as number,\r\n        lng: finalAddress.lng as number,\r\n        formattedAddress: finalAddress.formattedAddress as string,\r\n        vicinity: finalAddress.vicinity as string,\r\n      },\r\n    };\r\n\r\n    try {\r\n      newEventSchema.parse(eventData);\r\n      const response = await createEvent(eventData);\r\n      if (response?.ok) {\r\n        toast.success(response.message);\r\n        router.push(`/events`);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      if (err instanceof z.ZodError) {\r\n        err.errors.forEach((error) => {\r\n          const field = error.path[0];\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            [field]: { message: error.message, value: true },\r\n          }));\r\n        });\r\n      } else if (err instanceof Error) {\r\n        toast.error(err.message);\r\n        console.log(err);\r\n      }\r\n      toast.error('Une erreur est survenue 😑');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full max-w-[900px] mx-auto\">\r\n      <header className=\"relative w-full mb-5\">\r\n        <h1 className=\"text-4xl font-bold\">Créer un éventement 🚀</h1>\r\n        <button onClick={() => router.back()}>\r\n          <Icon\r\n            type=\"goBack\"\r\n            strokeWidth={2}\r\n            className=\"size-10 absolute right-[10px] top-[10px]\"\r\n          />\r\n        </button>\r\n      </header>\r\n      <main className=\"flex flex-col items-center justify-center mb-5 w-full relative rounded-xl border-2 border-light-borderCards bg-light-cards dark:border-dark-borderCards dark:bg-dark-cards\">\r\n        <form className=\"flex flex-col w-full gap-5 \" onSubmit={handleSubmit}>\r\n          <header\r\n            className=\"h-[300px] w-full border-b-2 rounded-tl-lg rounded-tr-lg border-black dark:border-dark-borderCards relative hover:bg-light-grey/10 bg-cover bg-center\"\r\n            style={{ backgroundImage: `url(${imagePreview})` }}\r\n          >\r\n            <input\r\n              ref={imageInputRef}\r\n              onChange={() => handleImagePreview()}\r\n              onKeyDown={handleKeyDownImageInput}\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              name=\"image\"\r\n              required={true}\r\n              className=\"relative h-full w-full opacity-0 cursor-pointer\"\r\n            ></input>\r\n            <span\r\n              className={`absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] text-2xl dark:text-light-grey/50 cursor-pointer ${error.image.value ? 'text-red-500' : ''}`}\r\n            >\r\n              {error.image.value\r\n                ? error.image.message\r\n                : 'Sélectionner une image'}\r\n            </span>\r\n          </header>\r\n          <section className=\"flex w-full gap-5 mt-2 justify-between  flex-wrap px-5\">\r\n            {/* Title, category and public fields */}\r\n            <fieldset className=\"flex flex-col sm:w-[50%] \">\r\n              <div className=\"flex w-full gap-2 flex-col\">\r\n                <input\r\n                  className=\"newEventInput sm:!w-[500px] \"\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  placeholder=\"Titre du événement (max 100 caractères)\"\r\n                  required={true}\r\n                />\r\n                {error.title?.value && (\r\n                  <span className=\"text-red-500 text-[1.2rem] mx-auto\">\r\n                    {error.title?.message}\r\n                  </span>\r\n                )}\r\n                <select className=\"newEventInput\" name=\"category\">\r\n                  <option>Catégorie</option>\r\n                  {availableCategories.map((category: Category) => (\r\n                    <option key={category.id} value={category.id}>\r\n                      {category.title}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                {error.category?.value && (\r\n                  <span className=\"text-red-500 text-[1.2rem]\">\r\n                    {error.category?.message}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <div className=\"flex flex-col gap-2 mt-5\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"primary-btn h-10\"\r\n                  onClick={() => setIsUserListOpen(true)}\r\n                >\r\n                  Inviter des participants\r\n                </button>\r\n                <label\r\n                  htmlFor=\"isPublic\"\r\n                  className=\"text-xl flex gap-2 select-none ml-2\"\r\n                >\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"isPublic\"\r\n                    id=\"isPublic\"\r\n                    className=\"w-4\"\r\n                  />\r\n                  Événement publique\r\n                </label>\r\n              </div>\r\n            </fieldset>\r\n            {/* Dates Fields */}\r\n            <fieldset className=\"flex flex-col gap-2\">\r\n              <label\r\n                htmlFor=\"eventStart\"\r\n                className=\"text-2xl flex flex-col gap-2\"\r\n              >\r\n                Commence le:\r\n                <input\r\n                  className=\"newEventInput !w-[250px] sm:w-[320px] sm:ml-3\"\r\n                  type=\"datetime-local\"\r\n                  name=\"eventStart\"\r\n                  placeholder=\"Date de début\"\r\n                />\r\n              </label>\r\n              {error.eventStart?.value && (\r\n                <span className=\"text-red-500 text-[1.2rem] mx-auto\">\r\n                  {error.eventStart?.message}\r\n                </span>\r\n              )}\r\n              <label\r\n                htmlFor=\"eventEnd\"\r\n                className=\"text-2xl flex flex-col gap-2\"\r\n              >\r\n                Se termine le:\r\n                <input\r\n                  className=\"newEventInput !w-[250px] sm:w-[320px] sm:ml-3\"\r\n                  type=\"datetime-local\"\r\n                  name=\"eventEnd\"\r\n                  placeholder=\"Date de fin\"\r\n                />\r\n              </label>\r\n              <label\r\n                htmlFor=\"endSameDay\"\r\n                className=\"text-xl flex gap-2 select-none ml-3\"\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"endSameDay\"\r\n                  id=\"endSameDay\"\r\n                  className=\"w-4\"\r\n                />\r\n                Se termine la même journée\r\n              </label>\r\n              {error.eventEnd?.value && (\r\n                <span className=\"text-red-500 text-[1.2rem]\">\r\n                  {error.eventEnd?.message}\r\n                </span>\r\n              )}\r\n            </fieldset>\r\n          </section>\r\n          <section className=\"flex gap-5 w-full justify-between items-start mt-2 flex-wrap px-5 \">\r\n            <textarea\r\n              className=\"p-4 mt-10 border-2 border-black dark:border-dark-grey/50 rounded-lg dark:bg-transparent dark:placeholder:text-dark-greenLight/50 w-full\"\r\n              rows={10}\r\n              name=\"description\"\r\n              placeholder=\"Description du événement (entre 30 et 1000 caractères 😉)\"\r\n            />\r\n            {error.description?.value && (\r\n              <span className=\"text-blue-500 text-[1.2rem] mx-auto\">\r\n                {error.description?.message}\r\n              </span>\r\n            )}\r\n          </section>\r\n          <section className=\"w-full px-5\">\r\n            <h3 className=\"text-2xl\">Ubication :</h3>\r\n            <span className=\"text-red-500\">\r\n              {error.address?.message ? error.address?.message : ''}\r\n            </span>\r\n            <div className=\"\">\r\n              <AutocompletedMapCard onAddressChange={setFinalAddress} />\r\n            </div>\r\n          </section>\r\n          <div className=\"w-full p-5\">\r\n            <button className=\"primary-btn w-full\" type=\"submit\">\r\n              Créer l&apos;événement\r\n            </button>\r\n          </div>\r\n        </form>\r\n        {isUserListOpen && (\r\n          <div className=\"fixed top-0 left-0 w-full h-full bg-black/80 flex justify-center items-center sm:pt-20\">\r\n            <SelectUserList\r\n              users={contacts}\r\n              takeUsers={setSelectedUsers}\r\n              closeModal={closeModal}\r\n            />\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n","'use client';\r\n\r\nimport { UserAvatar } from '@/public/images/UserAvatar';\r\nimport { BasicProfileInformation } from '@/types/types';\r\nimport { useEffect, useState } from 'react';\r\n\r\ninterface SelectUserListProps {\r\n  users: BasicProfileInformation[];\r\n  takeUsers: (selectedUsers: string[]) => void;\r\n  closeModal: () => void;\r\n  preSelectedUsers?: string[];\r\n}\r\n\r\nexport default function SelectUserList({\r\n  users,\r\n  takeUsers,\r\n  closeModal,\r\n  preSelectedUsers,\r\n}: SelectUserListProps) {\r\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>(\r\n    preSelectedUsers ?? []\r\n  );\r\n  const [filterUser, setFilterUser] =\r\n    useState<BasicProfileInformation[]>(users);\r\n\r\n  const searchUsers = (searchTerm: string) => {\r\n    const filteredUsers = users.filter((user) =>\r\n      user.username?.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilterUser(filteredUsers);\r\n  };\r\n\r\n  // Turn of the scroll of the body when the modal is open\r\n  useEffect(() => {\r\n    document.body.classList.add('no-scroll');\r\n    return () => {\r\n      document.body.classList.remove('no-scroll');\r\n    };\r\n  }, []);\r\n  const handleUserSelection = (userId: string) => {\r\n    setSelectedUserIds((prev) =>\r\n      prev.includes(userId)\r\n        ? prev.filter((id) => id !== userId)\r\n        : [...prev, userId]\r\n    );\r\n  };\r\n\r\n  const confirmSelection = () => {\r\n    takeUsers(selectedUserIds);\r\n    // closeModal();\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full max-w-[320px] 4xl:max-w-[420px] h-[85vh] max-h-[700px] flex flex-col justify-between gap-2 p-4 rounded-xl border bg-light-cards dark:bg-dark-bg mx-2 mt-2\">\r\n      <header className=\"w-full\">\r\n        <p className=\"text-2xl font-semibold mb-3\">Mes contactes</p>\r\n        <input\r\n          type=\"search\"\r\n          onChange={(e) => searchUsers(e.target.value)}\r\n          placeholder=\"Rechercher...\"\r\n          className=\"newEventInput !bg-light-grey dark:!bg-transparent\"\r\n        />\r\n      </header>\r\n      <ul className=\"flex flex-col w-full h-full no-scrollbar overflow-y-scroll inset-shadow-lg border border-light-borderCards dark:border-dark-borderCards rounded-lg p-2 bg-light-ciel dark:bg-dark-bg \">\r\n        {filterUser.length === 0 && (\r\n          <p className=\"text-center opacity-50\">Aucun utilisateur trouvé</p>\r\n        )}\r\n        {filterUser.map((user) => (\r\n          <li\r\n            key={user.id}\r\n            className={`cursor-pointer flex gap-2 bg-light-blue dark:bg-dark-cards items-end my-2 border-2 rounded-lg p-2 ${\r\n              selectedUserIds.includes(user.id)\r\n                ? 'border-light-yellow'\r\n                : 'border-inherit'\r\n            }`}\r\n            onClick={() => handleUserSelection(user.id)}\r\n          >\r\n            <div className=\"shrink-1\">\r\n              <UserAvatar src={user.image} />\r\n            </div>\r\n            <span>{user.username}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <footer className=\"flex flex-col gap-2 \">\r\n        <button className=\"primary-btn w-full\" onClick={confirmSelection}>\r\n          Confirmer\r\n        </button>\r\n        <button className=\"secondary-btn w-full\" onClick={closeModal}>\r\n          Annuler\r\n        </button>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-undef */\r\n'use client';\r\nimport { EventAddress } from '@/types/types';\r\nimport type { Libraries } from '@react-google-maps/api';\r\nimport {\r\n  Autocomplete,\r\n  GoogleMap,\r\n  LoadScript,\r\n  Marker,\r\n} from '@react-google-maps/api';\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\nconst libraries: Libraries = ['places'];\r\n\r\nconst MapWithAutocomplete = ({\r\n  onAddressChange,\r\n  existingAddress,\r\n}: {\r\n  onAddressChange: (address: EventAddress | null) => void;\r\n  existingAddress?: EventAddress | null;\r\n}) => {\r\n  const [isApiLoaded, setIsApiLoaded] = useState(false);\r\n  const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY || '';\r\n  const [place, setPlace] = useState({ lat: 53.54992, lng: 10.00678 });\r\n  const [zoom, setZoom] = useState(10);\r\n  const autocompleteRef = useRef<google.maps.places.Autocomplete | null>(null);\r\n  const onLoad = (autocomplete: google.maps.places.Autocomplete) => {\r\n    autocompleteRef.current = autocomplete;\r\n  };\r\n  const onPlaceChanged = () => {\r\n    if (autocompleteRef.current) {\r\n      const selectedPlace = autocompleteRef.current.getPlace();\r\n      if (selectedPlace?.geometry && selectedPlace.geometry?.location) {\r\n        const finalAddress = {\r\n          url: selectedPlace.url,\r\n          lat: selectedPlace.geometry.location.lat(),\r\n          lng: selectedPlace.geometry.location.lng(),\r\n          formattedAddress: selectedPlace.formatted_address,\r\n          vicinity: selectedPlace.vicinity,\r\n        };\r\n\r\n        setPlace({\r\n          lat: finalAddress.lat,\r\n          lng: finalAddress.lng,\r\n        });\r\n        setZoom(20);\r\n        onAddressChange(finalAddress);\r\n      }\r\n    }\r\n  };\r\n  // Delete the window.google object to avoid conflicts with the Google Maps API\r\n  // this is the solution to the error 'Google API is already presented'\r\n  useEffect(() => {\r\n    if (existingAddress) {\r\n      setPlace({\r\n        lat: existingAddress.lat as number,\r\n        lng: existingAddress.lng as number,\r\n      });\r\n      setZoom(20);\r\n    }\r\n    if (typeof window !== 'undefined' && window.google) {\r\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      delete (window as any).google;\r\n    }\r\n  }, [existingAddress]);\r\n  useEffect(() => {\r\n    if (!isApiLoaded) {\r\n      setIsApiLoaded(true);\r\n    }\r\n  }, [isApiLoaded]);\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey={apiKey} libraries={libraries}>\r\n      {isApiLoaded && (\r\n        <div>\r\n          <Autocomplete onLoad={onLoad} onPlaceChanged={onPlaceChanged}>\r\n            <input\r\n              placeholder=\"Chercher un lieu\"\r\n              className=\"newEventInput w-full mb-5\"\r\n              defaultValue={existingAddress?.formattedAddress ?? ''}\r\n            />\r\n          </Autocomplete>\r\n          <div className=\"rounded-lg border-2 border-black dark:border-dark-grey/50 overflow-hidden h-[500px] w-full\">\r\n            <GoogleMap\r\n              center={place}\r\n              zoom={zoom}\r\n              mapContainerStyle={{ width: '100%', height: '100%' }}\r\n            >\r\n              <Marker position={place} />\r\n            </GoogleMap>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default MapWithAutocomplete;\r\n","import { z } from 'zod';\r\n\r\nexport const emailSchema = z.object({\r\n  email: z\r\n    .string()\r\n    .email({ message: 'Veuillez utiliser une adresse e-mail valide' }),\r\n});\r\n\r\nexport const passwordRegex =\r\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#@$!%*?&])[A-Za-z\\d#@$!%*?&]{8,30}$/;\r\n\r\nexport const passwordRegexMessage =\r\n  '8 caractères, une majuscule, une minuscule, un chiffre et un caractère spécial, \\' \" _ - ne sont pas autorisés';\r\n\r\nexport const passwordSchema = z.object({\r\n  password: z\r\n    .string()\r\n    .min(8, { message: 'Le mot de passe doit être de 8 caractères minimum' })\r\n    .max(30, { message: 'Le mot de passe doit être de 30 caractères maximum' })\r\n    .regex(passwordRegex, {\r\n      message: passwordRegexMessage,\r\n    }),\r\n});\r\n\r\nexport const signUpSchema = z.object({\r\n  email: z\r\n    .string()\r\n    .email({ message: 'Veuillez utiliser une adresse e-mail valide' }),\r\n});\r\n\r\nexport const eventAddressSchema = z.object({\r\n  url: z.string().url(),\r\n  lat: z.number(),\r\n  lng: z.number(),\r\n  formattedAddress: z.string(),\r\n  vicinity: z.string(),\r\n});\r\n\r\nexport const newEventSchema = z.object({\r\n  categoryId: z.string(),\r\n  title: z\r\n    .string()\r\n    .max(100, { message: 'Le titre doit être de 100 caractères maximum' }),\r\n  description: z\r\n    .string()\r\n    .min(30, {\r\n      message: \"Il faut un peu de l'inspiration pour cette description!\",\r\n    })\r\n    .max(1000, {\r\n      message: 'La description doit être de 1000 caractères maximum',\r\n    }),\r\n  eventStart: z.date().refine(\r\n    (value) => {\r\n      const date = value;\r\n      const now = new Date();\r\n      return !isNaN(date.getTime()) && date >= now;\r\n    },\r\n    {\r\n      message: 'La date doit être valide et ne peut pas être dans le passé',\r\n    }\r\n  ),\r\n  eventEnd: z\r\n    .date()\r\n    .nullable()\r\n    .refine(\r\n      (value) => {\r\n        if (!value) return true;\r\n        const date = value;\r\n        const now = new Date();\r\n        return !isNaN(date.getTime()) && date >= now;\r\n      },\r\n      {\r\n        message: 'La date doit être valide et ne peut pas être dans le passé',\r\n      }\r\n    ),\r\n  isPublic: z.boolean(),\r\n  participants: z.array(z.string()),\r\n  address: eventAddressSchema,\r\n  image: z.instanceof(File),\r\n});\r\n\r\n// Generar el tipo TypeScript a partir del esquema\r\nexport type NewEventForm = z.infer<typeof newEventSchema>;\r\n\r\nconst validCategoryTitles = [\r\n  'sport',\r\n  'education',\r\n  'language',\r\n  'city tours',\r\n  'air libre',\r\n  'autres',\r\n];\r\n\r\nexport const categoryTitleSchema = z\r\n  .string()\r\n  .regex(new RegExp(`^(${validCategoryTitles.join('|')})$`), {\r\n    message: 'Titre invalide',\r\n  });\r\n\r\n// participants: z.array(z.string()).optional(),\r\n// TODO: ADD EDIT PROFILE SCHEMA\r\n\r\n/* \r\n=========================================================\r\n============ USER SERVICES OUTPUT SCHEMAS ===============\r\n=========================================================\r\n*/\r\nconst MAX_FILE_SIZE = 2 * 1024 * 1024; // 2MB\r\nexport const updateUserSchema = z.object({\r\n  username: z\r\n    .string()\r\n    .max(30, \"Le nom d'utilisateur doit comporter 30 caractères ou moins\")\r\n    .optional(),\r\n  image: z\r\n    .union([\r\n      z.instanceof(File).refine((file) => file.size <= MAX_FILE_SIZE, {\r\n        message: \"La taille de l'image doit être de 2 Mo ou moins\",\r\n      }),\r\n      z.null(),\r\n      z.undefined(),\r\n    ])\r\n    .optional(),\r\n  description: z\r\n    .string()\r\n    .max(1000, 'La description doit comporter 1000 caractères ou moins')\r\n    .optional(),\r\n  oldImage: z.string().optional(),\r\n});\r\n\r\nexport const getUserServiceSchema = z.object({\r\n  id: z.string(),\r\n  email: z.string().email().nullable(),\r\n  username: z.string().nullable(),\r\n  image: z.string().nullable(),\r\n  description: z.string().nullable(),\r\n  _count: z.object({\r\n    Ratings: z.number(),\r\n    EventsCreated: z.number(),\r\n  }),\r\n});\r\nexport type getUserServiceType = z.infer<typeof getUserServiceSchema>;\r\n\r\nexport const getAllUsersServiceSchema = z.array(getUserServiceSchema);\r\n","import { useMemo, useRef, type Ref } from 'react'\n\n// This is a compatibility hook to support React 18 and 19 refs.\n// In 19, a cleanup function from refs may be returned.\n// In 18, returning a cleanup function creates a warning.\n// Since we take userspace refs, we don't know ahead of time if a cleanup function will be returned.\n// This implements cleanup functions with the old behavior in 18.\n// We know refs are always called alternating with `null` and then `T`.\n// So a call with `null` means we need to call the previous cleanup functions.\nexport function useMergedRef<TElement>(\n  refA: Ref<TElement>,\n  refB: Ref<TElement>\n): Ref<TElement> {\n  const cleanupA = useRef<() => void>(() => {})\n  const cleanupB = useRef<() => void>(() => {})\n\n  return useMemo(() => {\n    if (!refA || !refB) {\n      return refA || refB\n    }\n\n    return (current: TElement | null): void => {\n      if (current === null) {\n        cleanupA.current()\n        cleanupB.current()\n      } else {\n        cleanupA.current = applyRef(refA, current)\n        cleanupB.current = applyRef(refB, current)\n      }\n    }\n  }, [refA, refB])\n}\n\nfunction applyRef<TElement>(\n  refA: NonNullable<Ref<TElement>>,\n  current: TElement\n) {\n  if (typeof refA === 'function') {\n    const cleanup = refA(current)\n    if (typeof cleanup === 'function') {\n      return cleanup\n    } else {\n      return () => refA(null)\n    }\n  } else {\n    refA.current = current\n    return () => {\n      refA.current = null\n    }\n  }\n}\n","'use client';\r\n\r\nimport Image from 'next/image';\r\n\r\ninterface UserAvatarProps {\r\n  className?: string;\r\n  src?: string | null | undefined;\r\n  onClick?: () => void;\r\n}\r\n\r\nexport const UserAvatar = ({ className, src, onClick }: UserAvatarProps) => {\r\n  const defaultSrc = '/images/DefaultUserAvatar1.png';\r\n  const imageSrc = src && src.trim() ? src : defaultSrc;\r\n\r\n  return (\r\n    <div\r\n      className={`${className || 'size-12'} ${onClick ? 'cursor-pointer' : ''} relative overflow-hidden rounded-full`}\r\n      onClick={onClick}\r\n      aria-label=\"User avatar\"\r\n    >\r\n      <Image\r\n        width={350}\r\n        height={350}\r\n        src={imageSrc}\r\n        className=\"rounded-full border border-card object-cover overflow-hidden\"\r\n        alt=\"user avatar\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"],"names":["NewEventPage","error","availableCategories","contacts","setError","useState","title","message","value","category","eventStart","eventEnd","description","address","image","router","useRouter","imageInputRef","useRef","finalAddress","setFinalAddress","imagePreview","setImagePreview","isUserListOpen","setIsUserListOpen","selectedParticipants","setSelectedParticipants","handleImagePreview","current","file","files","size","reader","FileReader","onload","e","target","result","readAsDataURL","handleSubmit","preventDefault","formData","FormData","currentTarget","endSameDay","get","console","log","eventData","categoryId","isPublic","Date","participants","url","lat","lng","formattedAddress","vicinity","newEventSchema","parse","response","createEvent","ok","toast","push","err","z","ZodError","errors","forEach","field","path","prevError","Error","div","className","header","h1","button","onClick","back","Icon","type","strokeWidth","main","form","onSubmit","style","backgroundImage","input","ref","onChange","onKeyDown","handleKeyDownImageInput","key","accept","name","required","span","section","fieldset","placeholder","select","option","map","id","label","htmlFor","textarea","rows","h3","AutocompletedMapCard","onAddressChange","SelectUserList","users","takeUsers","selectedUsers","setSelectedUsers","closeModal","preSelectedUsers","selectedUserIds","setSelectedUserIds","filterUser","setFilterUser","searchUsers","filter","filteredUsers","user","username","toLowerCase","includes","searchTerm","useEffect","document","body","classList","add","remove","handleUserSelection","prev","userId","p","ul","length","li","UserAvatar","src","footer","confirmSelection","libraries","existingAddress","MapWithAutocomplete","isApiLoaded","setIsApiLoaded","place","setPlace","zoom","setZoom","autocompleteRef","window","google","LoadScript","googleMapsApiKey","process","apiKey","Autocomplete","onLoad","autocomplete","onPlaceChanged","selectedPlace","getPlace","geometry","location","formatted_address","defaultValue","GoogleMap","center","mapContainerStyle","width","height","Marker","position","emailSchema","object","email","string","passwordSchema","password","min","max","regex","passwordRegex","passwordRegexMessage","eventAddressSchema","number","date","refine","now","isNaN","getTime","nullable","boolean","array","instanceof","File","RegExp","validCategoryTitles","join","updateUserSchema","optional","union","MAX_FILE_SIZE","null","undefined","oldImage","_count","Ratings","EventsCreated","getUserServiceSchema","useMergedRef","refA","refB","cleanupA","cleanupB","useMemo","applyRef","cleanup","imageSrc","trim","defaultSrc","aria-label","Image","alt"],"sourceRoot":"","ignoreList":[]}