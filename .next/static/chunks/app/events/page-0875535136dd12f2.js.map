{"version":3,"file":"static/chunks/app/events/page-0875535136dd12f2.js","mappings":"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","sources":["webpack://_N_E/?9afe","webpack://_N_E/./components/ui/SearchBar.tsx","webpack://_N_E/./public/images/UserAvatar.tsx","webpack://_N_E/./node_modules/next-view-transitions/dist/index.js"],"sourcesContent":["import(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"C:\\\\Users\\\\User\\\\Documents\\\\Hi world\\\\ADRAR 2024\\\\Fil Rouge\\\\components\\\\ui\\\\SearchBar.tsx\");\n;\nimport(/* webpackMode: \"eager\" */ \"C:\\\\Users\\\\User\\\\Documents\\\\Hi world\\\\ADRAR 2024\\\\Fil Rouge\\\\node_modules\\\\next-view-transitions\\\\dist\\\\index.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"UserAvatar\"] */ \"C:\\\\Users\\\\User\\\\Documents\\\\Hi world\\\\ADRAR 2024\\\\Fil Rouge\\\\public\\\\images\\\\UserAvatar.tsx\");\n","'use client';\r\n\r\nimport { Icon } from 'facu-ui';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\nimport { useCallback, useEffect, useState } from 'react';\r\n\r\ninterface SearchBarProps {\r\n  title: string;\r\n  searchType?: 'events' | 'users' | 'messages' | 'all';\r\n}\r\n\r\nexport default function SearchBar({ title }: SearchBarProps) {\r\n  let placeHolder = '';\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n  const [searchValue, setSearchValue] = useState(\r\n    searchParams.get('search') || ''\r\n  );\r\n  const handleSearch = useCallback(\r\n    (value: string) => {\r\n      const params = new URLSearchParams(searchParams.toString());\r\n      if (value) {\r\n        params.set('search', value);\r\n      } else {\r\n        params.delete('search');\r\n      }\r\n      router.push(`?${params.toString()}`);\r\n    },\r\n    [searchParams, router]\r\n  );\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      handleSearch(searchValue);\r\n    }, 500);\r\n    return () => clearTimeout(timeoutId);\r\n  }, [searchValue, handleSearch]);\r\n\r\n  switch (title) {\r\n    case 'users':\r\n      placeHolder = 'Un nom ? Une ville ?';\r\n      break;\r\n    case 'events':\r\n      placeHolder = 'mot clé, lieu, date ?';\r\n      break;\r\n    case 'messages':\r\n      placeHolder = 'Un conversation ? Un sujet ?';\r\n      break;\r\n    case 'all':\r\n      placeHolder = 'Un mot clé, un contact, une tâche ?';\r\n      break;\r\n    default:\r\n      placeHolder = 'Un mot clé ?';\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative flex w-full max-w-[500px] overflow-visible\">\r\n      <div className=\"flex items-center gap-2 w-full\">\r\n        <input\r\n          type=\"search\"\r\n          value={searchValue}\r\n          onChange={(e) => {\r\n            setSearchValue(e.target.value);\r\n          }}\r\n          placeholder={placeHolder}\r\n          className=\"w-full h-10 p-5 text-xl placeholder:select-none dark:placeholder:text-dark-greenLight/50 border-2 border-dark-bg dark:bg-dark-bg dark:border-light-grey rounded-lg\"\r\n        />\r\n        <Icon onClick={() => setIsOpen(!isOpen)} type=\"search\" width={40} />\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"absolute select-none z-50 top-12 right-0 w-full dark:bg-dark-bg bg-light-blue border border-light-grey rounded-lg shadow-lg p-4\">\r\n          <h3 className=\"text-lg font-bold mb-4 text-light-grey\">\r\n            Filtrer et Trier\r\n          </h3>\r\n          <div className=\"flex flex-col gap-4\">\r\n            <div>\r\n              <label\r\n                htmlFor=\"sort\"\r\n                className=\"block text-sm text-light-grey mb-2\"\r\n              >\r\n                Trier par\r\n              </label>\r\n              <select id=\"sort\" className=\"newEventInput\">\r\n                <option value=\"date\">Plus récent</option>\r\n                <option value=\"popularité\">Plus populaire</option>\r\n                <option value=\"proximité\">Plus ancien</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label\r\n                htmlFor=\"category\"\r\n                className=\"text-sm text-light-grey mb-2 sm:hidden\"\r\n              >\r\n                Catégorie\r\n              </label>\r\n              <select id=\"category\" className=\"newEventInput sm:hidden\">\r\n                <option value=\"toutes\">Toutes les catégories</option>\r\n                <option value=\"culture\">Culture</option>\r\n                <option value=\"sport\">Sport</option>\r\n                <option value=\"éducation\">Éducation</option>\r\n              </select>\r\n            </div>\r\n            <button\r\n              onClick={() => setIsOpen(false)}\r\n              className=\"w-full p-2 bg-light-yellow text-dark-bg font-bold rounded-lg hover:bg-light-yellow/80\"\r\n            >\r\n              Appliquer\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","'use client';\r\n\r\nimport Image from 'next/image';\r\n\r\ninterface UserAvatarProps {\r\n  className?: string;\r\n  src?: string | null | undefined;\r\n  onClick?: () => void;\r\n}\r\n\r\nexport const UserAvatar = ({ className, src, onClick }: UserAvatarProps) => {\r\n  const defaultSrc = '/images/DefaultUserAvatar1.png';\r\n  const imageSrc = src && src.trim() ? src : defaultSrc;\r\n\r\n  return (\r\n    <div\r\n      className={`${className || 'size-12'} ${onClick ? 'cursor-pointer' : ''} relative overflow-hidden rounded-full`}\r\n      onClick={onClick}\r\n      aria-label=\"User avatar\"\r\n    >\r\n      <Image\r\n        width={350}\r\n        height={350}\r\n        src={imageSrc}\r\n        className=\"rounded-full border border-card object-cover overflow-hidden\"\r\n        alt=\"user avatar\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport NextLink from 'next/link';\nimport { usePathname, useRouter } from 'next/navigation';\nimport { useSyncExternalStore, useRef, useState, useEffect, use, createContext, useCallback, startTransition, useMemo } from 'react';\n\nfunction useHash() {\n    return useSyncExternalStore(subscribeHash, getHashSnapshot, getServerHashSnapshot);\n}\nfunction getHashSnapshot() {\n    return window.location.hash;\n}\nfunction getServerHashSnapshot() {\n    return '';\n}\nfunction subscribeHash(onStoreChange) {\n    window.addEventListener('hashchange', onStoreChange);\n    return ()=>window.removeEventListener('hashchange', onStoreChange);\n}\n\n// TODO: This implementation might not be complete when there are nested\n// Suspense boundaries during a route transition. But it should work fine for\n// the most common use cases.\nfunction useBrowserNativeTransitions() {\n    const pathname = usePathname();\n    const currentPathname = useRef(pathname);\n    // This is a global state to keep track of the view transition state.\n    const [currentViewTransition, setCurrentViewTransition] = useState(null);\n    useEffect(()=>{\n        if (!('startViewTransition' in document)) {\n            return ()=>{};\n        }\n        const onPopState = ()=>{\n            let pendingViewTransitionResolve;\n            const pendingViewTransition = new Promise((resolve)=>{\n                pendingViewTransitionResolve = resolve;\n            });\n            const pendingStartViewTransition = new Promise((resolve)=>{\n                // @ts-ignore\n                document.startViewTransition(()=>{\n                    resolve();\n                    return pendingViewTransition;\n                });\n            });\n            setCurrentViewTransition([\n                pendingStartViewTransition,\n                pendingViewTransitionResolve\n            ]);\n        };\n        window.addEventListener('popstate', onPopState);\n        return ()=>{\n            window.removeEventListener('popstate', onPopState);\n        };\n    }, []);\n    if (currentViewTransition && currentPathname.current !== pathname) {\n        // Whenever the pathname changes, we block the rendering of the new route\n        // until the view transition is started (i.e. DOM screenshotted).\n        use(currentViewTransition[0]);\n    }\n    // Keep the transition reference up-to-date.\n    const transitionRef = useRef(currentViewTransition);\n    useEffect(()=>{\n        transitionRef.current = currentViewTransition;\n    }, [\n        currentViewTransition\n    ]);\n    const hash = useHash();\n    useEffect(()=>{\n        // When the new route component is actually mounted, we finish the view\n        // transition.\n        currentPathname.current = pathname;\n        if (transitionRef.current) {\n            transitionRef.current[1]();\n            transitionRef.current = null;\n        }\n    }, [\n        hash,\n        pathname\n    ]);\n}\n\nconst ViewTransitionsContext = /*#__PURE__*/ createContext(()=>()=>{});\nfunction ViewTransitions({ children }) {\n    const [finishViewTransition, setFinishViewTransition] = useState(null);\n    useEffect(()=>{\n        if (finishViewTransition) {\n            finishViewTransition();\n            setFinishViewTransition(null);\n        }\n    }, [\n        finishViewTransition\n    ]);\n    useBrowserNativeTransitions();\n    return /*#__PURE__*/ jsx(ViewTransitionsContext.Provider, {\n        value: setFinishViewTransition,\n        children: children\n    });\n}\nfunction useSetFinishViewTransition() {\n    return use(ViewTransitionsContext);\n}\n\nfunction _extends$1() {\n    _extends$1 = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends$1.apply(this, arguments);\n}\nfunction _object_without_properties_loose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nfunction useTransitionRouter() {\n    const router = useRouter();\n    const finishViewTransition = useSetFinishViewTransition();\n    const triggerTransition = useCallback((cb, { onTransitionReady } = {})=>{\n        if ('startViewTransition' in document) {\n            // @ts-ignore\n            const transition = document.startViewTransition(()=>new Promise((resolve)=>{\n                    startTransition(()=>{\n                        cb();\n                        finishViewTransition(()=>resolve);\n                    });\n                }));\n            if (onTransitionReady) {\n                transition.ready.then(onTransitionReady);\n            }\n        } else {\n            return cb();\n        }\n    }, []);\n    const push = useCallback((href, _param = {})=>{\n        var { onTransitionReady } = _param, options = _object_without_properties_loose(_param, [\n            \"onTransitionReady\"\n        ]);\n        triggerTransition(()=>router.push(href, options), {\n            onTransitionReady\n        });\n    }, [\n        triggerTransition,\n        router\n    ]);\n    const replace = useCallback((href, _param = {})=>{\n        var { onTransitionReady } = _param, options = _object_without_properties_loose(_param, [\n            \"onTransitionReady\"\n        ]);\n        triggerTransition(()=>router.replace(href, options), {\n            onTransitionReady\n        });\n    }, [\n        triggerTransition,\n        router\n    ]);\n    return useMemo(()=>_extends$1({}, router, {\n            push,\n            replace\n        }), [\n        push,\n        replace,\n        router\n    ]);\n}\n\nfunction _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\n// copied from https://github.com/vercel/next.js/blob/66f8ffaa7a834f6591a12517618dce1fd69784f6/packages/next/src/client/link.tsx#L180-L191\nfunction isModifiedEvent(event) {\n    const eventTarget = event.currentTarget;\n    const target = eventTarget.getAttribute('target');\n    return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || // triggers resource download\n    event.nativeEvent && event.nativeEvent.which === 2;\n}\n// copied from https://github.com/vercel/next.js/blob/66f8ffaa7a834f6591a12517618dce1fd69784f6/packages/next/src/client/link.tsx#L204-L217\nfunction shouldPreserveDefault(e) {\n    const { nodeName } = e.currentTarget;\n    // anchors inside an svg have a lowercase nodeName\n    const isAnchorNodeName = nodeName.toUpperCase() === 'A';\n    if (isAnchorNodeName && isModifiedEvent(e)) {\n        // ignore click for browser’s default behavior\n        return true;\n    }\n    return false;\n}\n// This is a wrapper around next/link that explicitly uses the router APIs\n// to navigate, and trigger a view transition.\nfunction Link(props) {\n    const router = useTransitionRouter();\n    const { href, as, replace, scroll } = props;\n    const onClick = useCallback((e)=>{\n        if (props.onClick) {\n            props.onClick(e);\n        }\n        if ('startViewTransition' in document) {\n            if (shouldPreserveDefault(e)) {\n                return;\n            }\n            e.preventDefault();\n            const navigate = replace ? router.replace : router.push;\n            navigate(as || href, {\n                scroll: scroll != null ? scroll : true\n            });\n        }\n    }, [\n        props.onClick,\n        href,\n        as,\n        replace,\n        scroll\n    ]);\n    return /*#__PURE__*/ jsx(NextLink, _extends({}, props, {\n        onClick: onClick\n    }));\n}\n\nexport { Link, ViewTransitions, useTransitionRouter };\n"],"names":["SearchBar","title","placeHolder","isOpen","setIsOpen","useState","router","useRouter","searchParams","useSearchParams","searchValue","setSearchValue","get","handleSearch","useCallback","params","URLSearchParams","toString","value","set","delete","push","useEffect","timeoutId","setTimeout","clearTimeout","div","className","input","type","onChange","e","target","placeholder","Icon","onClick","width","h3","label","htmlFor","select","id","option","button","UserAvatar","src","imageSrc","trim","defaultSrc","aria-label","Image","height","alt","getHashSnapshot","window","location","hash","getServerHashSnapshot","subscribeHash","onStoreChange","addEventListener","removeEventListener","ViewTransitionsContext","createContext","ViewTransitions","children","finishViewTransition","setFinishViewTransition","useBrowserNativeTransitions","pathname","usePathname","currentPathname","useRef","currentViewTransition","setCurrentViewTransition","document","onPopState","pendingViewTransitionResolve","pendingViewTransition","Promise","resolve","startViewTransition","current","use","transitionRef","useSyncExternalStore","useHash","jsx","Provider","_extends$1","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_object_without_properties_loose","excluded","sourceKeys","keys","indexOf","useTransitionRouter","triggerTransition","useSetFinishViewTransition","cb","onTransitionReady","transition","startTransition","ready","then","href","_param","options","replace","useMemo","_extends","Link","props","as","scroll","shouldPreserveDefault","nodeName","currentTarget","toUpperCase","isModifiedEvent","event","getAttribute","metaKey","ctrlKey","shiftKey","altKey","nativeEvent","which","preventDefault","navigate","NextLink"],"sourceRoot":"","ignoreList":[3]}