{"version":3,"file":"static/chunks/app/profile/page-343f7daec6130a50.js","mappings":"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","sources":["webpack://_N_E/?3623","webpack://_N_E/./components/forms/SelectUserList.tsx","webpack://_N_E/./components/ui/SearchBar.tsx","webpack://_N_E/?cbee","webpack://_N_E/./components/ui/Badge.tsx","webpack://_N_E/?f0dd","webpack://_N_E/./components/forms/SubmitFormButtom.tsx","webpack://_N_E/./components/ui/modals/DeleteEventModal.tsx","webpack://_N_E/./components/ui/cards/OwnerEventCard.tsx","webpack://_N_E/?8f27","webpack://_N_E/./components/ui/dashboard/SignOutButton.tsx","webpack://_N_E/?56cd","webpack://_N_E/?603f","webpack://_N_E/?4226","webpack://_N_E/./components/ui/dashboard/TasksProfile.tsx"],"sourcesContent":["import(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"C:\\\\Users\\\\User\\\\Documents\\\\Hi world\\\\ADRAR 2024\\\\Fil Rouge\\\\components\\\\ui\\\\cards\\\\OwnerEventCard.tsx\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"C:\\\\Users\\\\User\\\\Documents\\\\Hi world\\\\ADRAR 2024\\\\Fil Rouge\\\\components\\\\ui\\\\dashboard\\\\SignOutButton.tsx\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"C:\\\\Users\\\\User\\\\Documents\\\\Hi world\\\\ADRAR 2024\\\\Fil Rouge\\\\components\\\\ui\\\\dashboard\\\\TasksProfile.tsx\");\n;\nimport(/* webpackMode: \"eager\" */ \"C:\\\\Users\\\\User\\\\Documents\\\\Hi world\\\\ADRAR 2024\\\\Fil Rouge\\\\components\\\\ui\\\\IconWrapper.tsx\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"C:\\\\Users\\\\User\\\\Documents\\\\Hi world\\\\ADRAR 2024\\\\Fil Rouge\\\\components\\\\ui\\\\SearchBar.tsx\");\n;\nimport(/* webpackMode: \"eager\" */ \"C:\\\\Users\\\\User\\\\Documents\\\\Hi world\\\\ADRAR 2024\\\\Fil Rouge\\\\node_modules\\\\next-view-transitions\\\\dist\\\\index.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"C:\\\\Users\\\\User\\\\Documents\\\\Hi world\\\\ADRAR 2024\\\\Fil Rouge\\\\public\\\\images\\\\UserAvatar.tsx\");\n","'use client';\r\n\r\nimport { UserAvatar } from '@/public/images/UserAvatar';\r\nimport { BasicProfileInformation } from '@/types/types';\r\nimport { useEffect, useState } from 'react';\r\n\r\ninterface SelectUserListProps {\r\n  users: BasicProfileInformation[];\r\n  takeUsers: (selectedUsers: string[]) => void;\r\n  closeModal: () => void;\r\n  preSelectedUsers?: string[];\r\n}\r\n\r\nexport default function SelectUserList({\r\n  users,\r\n  takeUsers,\r\n  closeModal,\r\n  preSelectedUsers,\r\n}: SelectUserListProps) {\r\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>(\r\n    preSelectedUsers ?? []\r\n  );\r\n  const [filterUser, setFilterUser] =\r\n    useState<BasicProfileInformation[]>(users);\r\n\r\n  const searchUsers = (searchTerm: string) => {\r\n    const filteredUsers = users.filter((user) =>\r\n      user.username?.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilterUser(filteredUsers);\r\n  };\r\n\r\n  // Turn of the scroll of the body when the modal is open\r\n  useEffect(() => {\r\n    document.body.classList.add('no-scroll');\r\n    return () => {\r\n      document.body.classList.remove('no-scroll');\r\n    };\r\n  }, []);\r\n  const handleUserSelection = (userId: string) => {\r\n    setSelectedUserIds((prev) =>\r\n      prev.includes(userId)\r\n        ? prev.filter((id) => id !== userId)\r\n        : [...prev, userId]\r\n    );\r\n  };\r\n\r\n  const confirmSelection = () => {\r\n    takeUsers(selectedUserIds);\r\n    // closeModal();\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full max-w-[320px] 4xl:max-w-[420px] h-[85vh] max-h-[700px] flex flex-col justify-between gap-2 p-4 rounded-xl border bg-light-cards dark:bg-dark-bg mx-2 mt-2\">\r\n      <header className=\"w-full\">\r\n        <p className=\"text-2xl font-semibold mb-3\">Mes contactes</p>\r\n        <input\r\n          type=\"search\"\r\n          onChange={(e) => searchUsers(e.target.value)}\r\n          placeholder=\"Rechercher...\"\r\n          className=\"newEventInput !bg-light-grey dark:!bg-transparent\"\r\n        />\r\n      </header>\r\n      <ul className=\"flex flex-col w-full h-full no-scrollbar overflow-y-scroll inset-shadow-lg border border-light-borderCards dark:border-dark-borderCards rounded-lg p-2 bg-light-ciel dark:bg-dark-bg \">\r\n        {filterUser.length === 0 && (\r\n          <p className=\"text-center opacity-50\">Aucun utilisateur trouvé</p>\r\n        )}\r\n        {filterUser.map((user) => (\r\n          <li\r\n            key={user.id}\r\n            className={`cursor-pointer flex gap-2 bg-light-blue dark:bg-dark-cards items-end my-2 border-2 rounded-lg p-2 ${\r\n              selectedUserIds.includes(user.id)\r\n                ? 'border-light-yellow'\r\n                : 'border-inherit'\r\n            }`}\r\n            onClick={() => handleUserSelection(user.id)}\r\n          >\r\n            <div className=\"shrink-1\">\r\n              <UserAvatar src={user.image} />\r\n            </div>\r\n            <span>{user.username}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <footer className=\"flex flex-col gap-2 \">\r\n        <button className=\"primary-btn w-full\" onClick={confirmSelection}>\r\n          Confirmer\r\n        </button>\r\n        <button className=\"secondary-btn w-full\" onClick={closeModal}>\r\n          Annuler\r\n        </button>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","'use client';\r\n\r\nimport { Icon } from 'facu-ui';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\nimport { useCallback, useEffect, useState } from 'react';\r\n\r\ninterface SearchBarProps {\r\n  title: string;\r\n  searchType?: 'events' | 'users' | 'messages' | 'all';\r\n}\r\n\r\nexport default function SearchBar({ title }: SearchBarProps) {\r\n  let placeHolder = '';\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n  const [searchValue, setSearchValue] = useState(\r\n    searchParams.get('search') || ''\r\n  );\r\n  const handleSearch = useCallback(\r\n    (value: string) => {\r\n      const params = new URLSearchParams(searchParams.toString());\r\n      if (value) {\r\n        params.set('search', value);\r\n      } else {\r\n        params.delete('search');\r\n      }\r\n      router.push(`?${params.toString()}`);\r\n    },\r\n    [searchParams, router]\r\n  );\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      handleSearch(searchValue);\r\n    }, 500);\r\n    return () => clearTimeout(timeoutId);\r\n  }, [searchValue, handleSearch]);\r\n\r\n  switch (title) {\r\n    case 'users':\r\n      placeHolder = 'Un nom ? Une ville ?';\r\n      break;\r\n    case 'events':\r\n      placeHolder = 'mot clé, lieu, date ?';\r\n      break;\r\n    case 'messages':\r\n      placeHolder = 'Un conversation ? Un sujet ?';\r\n      break;\r\n    case 'all':\r\n      placeHolder = 'Un mot clé, un contact, une tâche ?';\r\n      break;\r\n    default:\r\n      placeHolder = 'Un mot clé ?';\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative flex w-full max-w-[500px] overflow-visible\">\r\n      <div className=\"flex items-center gap-2 w-full\">\r\n        <input\r\n          type=\"search\"\r\n          value={searchValue}\r\n          onChange={(e) => {\r\n            setSearchValue(e.target.value);\r\n          }}\r\n          placeholder={placeHolder}\r\n          className=\"w-full h-10 p-5 text-xl placeholder:select-none dark:placeholder:text-dark-greenLight/50 border-2 border-dark-bg dark:bg-dark-bg dark:border-light-grey rounded-lg\"\r\n        />\r\n        <Icon onClick={() => setIsOpen(!isOpen)} type=\"search\" width={40} />\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"absolute select-none z-50 top-12 right-0 w-full dark:bg-dark-bg bg-light-blue border border-light-grey rounded-lg shadow-lg p-4\">\r\n          <h3 className=\"text-lg font-bold mb-4 text-light-grey\">\r\n            Filtrer et Trier\r\n          </h3>\r\n          <div className=\"flex flex-col gap-4\">\r\n            <div>\r\n              <label\r\n                htmlFor=\"sort\"\r\n                className=\"block text-sm text-light-grey mb-2\"\r\n              >\r\n                Trier par\r\n              </label>\r\n              <select id=\"sort\" className=\"newEventInput\">\r\n                <option value=\"date\">Plus récent</option>\r\n                <option value=\"popularité\">Plus populaire</option>\r\n                <option value=\"proximité\">Plus ancien</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label\r\n                htmlFor=\"category\"\r\n                className=\"text-sm text-light-grey mb-2 sm:hidden\"\r\n              >\r\n                Catégorie\r\n              </label>\r\n              <select id=\"category\" className=\"newEventInput sm:hidden\">\r\n                <option value=\"toutes\">Toutes les catégories</option>\r\n                <option value=\"culture\">Culture</option>\r\n                <option value=\"sport\">Sport</option>\r\n                <option value=\"éducation\">Éducation</option>\r\n              </select>\r\n            </div>\r\n            <button\r\n              onClick={() => setIsOpen(false)}\r\n              className=\"w-full p-2 bg-light-yellow text-dark-bg font-bold rounded-lg hover:bg-light-yellow/80\"\r\n            >\r\n              Appliquer\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { createServerReference, callServer, findSourceMapURL } from 'private-next-rsc-action-client-wrapper'\nexport const sendInvitationToEvent = /*#__PURE__*/createServerReference(\"7f86c437f75ffeab4332bd128663d1faa33add1145\", callServer, undefined, findSourceMapURL, \"sendInvitationToEvent\")","import React from 'react';\r\n\r\ntype BadgeProps = {\r\n  children: React.ReactNode | string;\r\n  color?: 'primary' | 'secondary' | 'success' | 'warning' | 'error' | 'info';\r\n  size?: 'small' | 'medium' | 'large';\r\n  outline?: boolean;\r\n  rounded?: 'pill' | 'circle';\r\n  className?: string;\r\n  onClick?: () => void;\r\n};\r\n\r\nexport default function Badge({\r\n  children,\r\n  color = 'primary',\r\n  size = 'medium',\r\n  outline = false,\r\n  rounded = 'pill',\r\n  className = '',\r\n  onClick,\r\n}: BadgeProps) {\r\n  // Configuración de colores\r\n  const variantClasses = {\r\n    primary: {\r\n      bg: 'bg-light-ciel dark:bg-dark-greenLight/70',\r\n      text: 'text-black dark:text-white',\r\n      ring: 'ring-2 ring-light-ciel dark:ring-dark-greenLight',\r\n    },\r\n    secondary: {\r\n      bg: 'bg-purple-100 dark:bg-purple-900/70',\r\n      text: 'text-purple-800 dark:text-purple-100',\r\n      ring: 'ring-2 ring-purple-500',\r\n    },\r\n    success: {\r\n      bg: 'bg-green-100 dark:bg-green-900/70',\r\n      text: 'text-green-800 dark:text-green-100',\r\n      ring: 'ring-2 ring-green-500',\r\n    },\r\n    warning: {\r\n      bg: 'bg-yellow-100 dark:bg-yellow-900/70',\r\n      text: 'text-yellow-800 dark:text-yellow-100',\r\n      ring: 'ring-2 ring-yellow-500',\r\n    },\r\n    error: {\r\n      bg: 'bg-red-100 dark:bg-red-900/70',\r\n      text: 'text-red-800 dark:text-red-100',\r\n      ring: 'ring-2 ring-red-500',\r\n    },\r\n    info: {\r\n      bg: 'bg-blue-100 dark:bg-blue-900/70',\r\n      text: 'text-blue-800 dark:text-blue-100',\r\n      ring: 'ring-2 ring-blue-500',\r\n    },\r\n  };\r\n\r\n  // Tamaños\r\n  const sizeClasses = {\r\n    small: 'px-2 py-0.5 text-xs',\r\n    medium: 'px-3 py-1 text-sm',\r\n    large: 'px-4 py-1.5 text-base',\r\n  };\r\n\r\n  // Estilo outline\r\n  const outlineClasses = outline\r\n    ? `bg-transparent ${variantClasses[color].text} ${variantClasses[color].ring}`\r\n    : `${variantClasses[color].bg} ${variantClasses[color].text}`;\r\n\r\n  // Radio de borde\r\n  const roundedClasses = {\r\n    pill: 'rounded-full',\r\n    circle: 'rounded-lg',\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      className={`inline-flex items-center font-[500] transition-all cursor-pointer ${\r\n        sizeClasses[size]\r\n      } ${roundedClasses[rounded]} ${outlineClasses} ${className}`}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import { createServerReference, callServer, findSourceMapURL } from 'private-next-rsc-action-client-wrapper'\nexport const deleteEvent = /*#__PURE__*/createServerReference(\"7fd919d4267e3516d1ebfb2bae9c83eac9c99aecc3\", callServer, undefined, findSourceMapURL, \"deleteEvent\")","'use client';\r\n\r\nimport { useFormStatus } from 'react-dom';\r\n\r\ninterface SubmitButtonProps {\r\n  text: string;\r\n  loadingText: string;\r\n  className?: string;\r\n}\r\n\r\nexport default function SubmitButton({\r\n  text,\r\n  loadingText,\r\n  className,\r\n}: SubmitButtonProps) {\r\n  const { pending } = useFormStatus();\r\n  return (\r\n    <button type=\"submit\" className={`primary-btn ${className}`}>\r\n      {pending ? loadingText : text}\r\n    </button>\r\n  );\r\n}\r\n","import { deleteEvent } from '@/actions/eventsServerActions/deleteEvent';\r\nimport SubmitButton from '@/components/forms/SubmitFormButtom';\r\nimport { redirect } from 'next/navigation';\r\nimport React from 'react';\r\nimport { toast } from 'sonner';\r\n\r\ninterface DeleteEventModalProps {\r\n  eventId: string;\r\n  toggleModal: () => void;\r\n}\r\nexport default function DeleteEventModal({\r\n  eventId,\r\n  toggleModal,\r\n}: DeleteEventModalProps) {\r\n  const handleSubmitDelete = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await deleteEvent({ eventId });\r\n      toast.success('Événement supprimé avec succès');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    redirect('/profile');\r\n  };\r\n\r\n  return (\r\n    <div className=\"absolute top-0 left-0 w-full h-full rounded-lg bg-black/90 flex items-center justify-center\">\r\n      <div className=\"flex flex-col gap-2 w-full text-center\">\r\n        <h1 className=\"font-bold text-2xl\">\r\n          Êtes-vous sûr de vouloir supprimer cet événement ?\r\n        </h1>\r\n        <p className=\"text-center text-lg font-extralight\">\r\n          Cette action est irréversible.\r\n        </p>\r\n        <form\r\n          onSubmit={(e) => handleSubmitDelete(e)}\r\n          className=\"flex flex-wrap w-full justify-center gap-2\"\r\n        >\r\n          <SubmitButton\r\n            text=\"Supprimer\"\r\n            loadingText=\"Suppression...\"\r\n            className=\"secondary-btn\"\r\n          />\r\n          <button onClick={toggleModal} className=\"primary-btn\">\r\n            Non, annuler\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","'use client';\r\n\r\nimport { sendInvitationToEvent } from '@/actions/eventsServerActions/joinUserToEvent';\r\nimport SelectUserList from '@/components/forms/SelectUserList';\r\nimport { BasicEventData, BasicProfileInformation } from '@/types/types';\r\nimport { Icon } from 'facu-ui';\r\nimport { Link } from 'next-view-transitions';\r\nimport { useState } from 'react';\r\nimport { toast } from 'sonner';\r\nimport Badge from '../Badge';\r\nimport AddToCalendarButton from '../dashboard/AddToCalendarButton';\r\nimport TasksProfile from '../dashboard/TasksProfile';\r\nimport DeleteEventModal from '../modals/DeleteEventModal';\r\n\r\nexport default function OwnerEventCard({\r\n  event,\r\n  contacts,\r\n}: {\r\n  event: BasicEventData;\r\n  contacts: BasicProfileInformation[];\r\n}) {\r\n  const [cardOpen, setCardOpen] = useState(false);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [isUserListOpen, setIsUserListOpen] = useState(false);\r\n\r\n  function calculateDaysDifference(dateStart: Date) {\r\n    const fechaActual: Date = new Date();\r\n    const diferenciaTiempo = dateStart.getTime() - fechaActual.getTime();\r\n    const diferenciaDias = Math.round(diferenciaTiempo / (1000 * 60 * 60 * 24));\r\n    return diferenciaDias;\r\n  }\r\n  const daysFromToday = calculateDaysDifference(event.eventStart);\r\n  const pendingTasks = event.tasks?.filter((task) => !task.completed);\r\n  const toggleDeleteModal = () => {\r\n    setModalOpen(!modalOpen);\r\n  };\r\n\r\n  const closeUserListModal = () => {\r\n    setIsUserListOpen(!isUserListOpen);\r\n  };\r\n  const handleTakeUsers = async (selectedUsers: string[]) => {\r\n    const response = await sendInvitationToEvent({\r\n      eventId: event.id,\r\n      participantsIds: selectedUsers,\r\n    });\r\n    if (response?.ok) {\r\n      toast.success(response.message);\r\n    } else {\r\n      toast.error(response.message);\r\n    }\r\n    closeUserListModal();\r\n  };\r\n  return (\r\n    <div className=\"relative flex flex-col gap-2 justify-between w-full h-fit p-5 border border-dark-bg dark:border-light-grey rounded-lg bg-card\">\r\n      <div className=\"font-extralight text-lg flex flex-wrap items-center gap-5 select-none\">\r\n        <h1 className=\"font-bold text-2xl\">{event.title}</h1>\r\n        {daysFromToday > 0 ? (\r\n          <Badge color=\"warning\" onClick={() => setCardOpen(!cardOpen)}>\r\n            <p>{daysFromToday} jours restants</p>\r\n          </Badge>\r\n        ) : (\r\n          <Badge color=\"info\" onClick={() => setCardOpen(!cardOpen)}>\r\n            <p>\r\n              Passé il fait {daysFromToday}{' '}\r\n              {daysFromToday > 1 ? 'jours' : 'jour'}\r\n            </p>\r\n          </Badge>\r\n        )}\r\n        {event.participants && (\r\n          <Badge onClick={() => setCardOpen(!cardOpen)} color=\"success\">\r\n            {event.participants.length}{' '}\r\n            {event.participants.length > 1 ? 'participants' : 'participant'}\r\n          </Badge>\r\n        )}\r\n        <Badge onClick={() => setCardOpen(!cardOpen)} color=\"error\">\r\n          <p>{pendingTasks?.length || 0} tâches à accomplir</p>\r\n        </Badge>\r\n        <div className=\"absolute right-5 top-7\">\r\n          {cardOpen ? (\r\n            <Icon\r\n              type=\"minus\"\r\n              strokeWidth={3}\r\n              onClick={() => setCardOpen(false)}\r\n            />\r\n          ) : (\r\n            <Icon\r\n              type=\"plus\"\r\n              strokeWidth={3}\r\n              onClick={() => setCardOpen(true)}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={`overflow-hidden transition-all duration-500 ease-in-out ${\r\n          cardOpen ? 'max-h-[500px] opacity-100' : 'max-h-0 opacity-0'\r\n        }`}\r\n      >\r\n        <div className=\"flex flex-wrap gap-2 mt-2 mb-5\">\r\n          <Link href={`/events/edit/${event.id}`} className=\"primary-btn\">\r\n            Éditer\r\n          </Link>\r\n          <button\r\n            className=\"primary-btn\"\r\n            onClick={() => setIsUserListOpen(true)}\r\n          >\r\n            Gérer les participants\r\n          </button>\r\n          <button className=\"secondary-btn\" onClick={toggleDeleteModal}>\r\n            Supprimer\r\n          </button>\r\n        </div>\r\n        <div className=\"flex justify-start items-center mb-10\">\r\n          <AddToCalendarButton event={event} />\r\n        </div>\r\n        <TasksProfile tasks={event.tasks || []} eventId={event.id} />\r\n      </div>\r\n      {modalOpen && (\r\n        <DeleteEventModal eventId={event.id} toggleModal={toggleDeleteModal} />\r\n      )}\r\n      {isUserListOpen && (\r\n        <div className=\"fixed z-[100] top-0 left-0 w-full h-full bg-black/80 flex justify-center items-center sm:pt-20\">\r\n          <SelectUserList\r\n            users={contacts}\r\n            takeUsers={handleTakeUsers}\r\n            closeModal={closeUserListModal}\r\n            preSelectedUsers={event.participants?.map(\r\n              (participant) => participant.userId\r\n            )}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { createServerReference, callServer, findSourceMapURL } from 'private-next-rsc-action-client-wrapper'\nexport const handleSignOut = /*#__PURE__*/createServerReference(\"0020711e683fce2295dcae5b03dba6b4bb1f7f7653\", callServer, undefined, findSourceMapURL, \"handleSignOut\")","'use client';\r\nimport { handleSignOut } from '@/actions/authServerActions/signOutServerAction';\r\nimport React from 'react';\r\n\r\nexport const SignOutButton: React.FC = () => {\r\n  return (\r\n    <button className=\"secondary-btn\" onClick={() => handleSignOut()}>\r\n      {/* <IconWrapper type=\"logOut\" strokeWidth={2} /> */}\r\n      Déconnexion\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SignOutButton;\r\n","import { createServerReference, callServer, findSourceMapURL } from 'private-next-rsc-action-client-wrapper'\nexport const createTask = /*#__PURE__*/createServerReference(\"7f18c30c8768a9e22fdb2c3dd272f2ab4d6f47def8\", callServer, undefined, findSourceMapURL, \"createTask\")","import { createServerReference, callServer, findSourceMapURL } from 'private-next-rsc-action-client-wrapper'\nexport const deleteUserTask = /*#__PURE__*/createServerReference(\"7f79946f45de2eea1739a88c4620698c367ede93b0\", callServer, undefined, findSourceMapURL, \"deleteUserTask\")","import { createServerReference, callServer, findSourceMapURL } from 'private-next-rsc-action-client-wrapper'\nexport const updateTask = /*#__PURE__*/createServerReference(\"7fb44f0178c4951b568ad269ec66e74635f4a91807\", callServer, undefined, findSourceMapURL, \"updateTask\")","'use client';\r\n\r\nimport { createTask } from '@/actions/TasksServerActions/createTask';\r\nimport { deleteUserTask } from '@/actions/TasksServerActions/deleteUserTask';\r\nimport { updateTask } from '@/actions/TasksServerActions/updateTask';\r\nimport { Tasks } from '@prisma/client';\r\nimport { Icon } from 'facu-ui';\r\nimport { Reorder } from 'framer-motion';\r\nimport React, {\r\n  ChangeEvent,\r\n  FormEvent,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\n\r\ninterface TasksProfileProps {\r\n  tasks: Tasks[];\r\n  eventId?: string;\r\n}\r\n\r\nexport default function TasksProfile({ tasks, eventId }: TasksProfileProps) {\r\n  const [clientTasks, setClientTasks] = useState<Tasks[]>(tasks);\r\n  const [currentTask, setCurrentTask] = useState<Tasks | null>(null);\r\n  const [currentContent, setCurrentContent] = useState<string>('');\r\n  const tasksFormRef = useRef<HTMLFormElement>(null);\r\n  const newTaskInputRef = useRef<HTMLTextAreaElement>(null);\r\n  const textareaRef = useRef<HTMLTextAreaElement[]>([]);\r\n  // This useEffect is used to set the textarea height to the content\r\n  useEffect(() => {\r\n    clientTasks.forEach((task: Tasks, index: number) => {\r\n      const input = textareaRef.current[index];\r\n      if (input) {\r\n        input.style.height = '10px';\r\n        input.style.height = `${input.scrollHeight + 1}px`;\r\n      }\r\n    });\r\n\r\n    if (newTaskInputRef.current) {\r\n      newTaskInputRef.current.style.height = '10px';\r\n      newTaskInputRef.current.style.height = `${newTaskInputRef.current.scrollHeight + 1}px`;\r\n    }\r\n  }, [clientTasks]);\r\n\r\n  // This useEffect is used to save the task when the user leaves the page\r\n  // It use the beforeunload event and after it'is called the eventListener is removed\r\n  useEffect(() => {\r\n    const handleBeforeUnload = () => {\r\n      if (currentTask) {\r\n        handleUpdateTaskContent();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n\r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentTask, currentContent]);\r\n\r\n  const handleDeleteTask = async (id: string) => {\r\n    if (!id) return;\r\n    const response = await deleteUserTask(id);\r\n    if (response?.ok) {\r\n      setClientTasks(clientTasks.filter((task: Tasks) => task.id !== id));\r\n    }\r\n  };\r\n\r\n  // This function update the content of a task in the database\r\n  const handleUpdateTaskContent = async () => {\r\n    if (!currentTask) return;\r\n    // Delete task if the content is empty\r\n    if (currentContent.length === 0) {\r\n      await handleDeleteTask(currentTask.id);\r\n      return;\r\n    }\r\n    const updatedTask = {\r\n      ...currentTask,\r\n      content: currentContent.trim(),\r\n    };\r\n    try {\r\n      const result = await updateTask(updatedTask);\r\n      if (result.ok) {\r\n        setClientTasks(\r\n          clientTasks.map((task: Tasks) =>\r\n            task.id === updatedTask.id ? updatedTask : task\r\n          )\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // this function update the status of a task (completed or not) when the user click on the checkbox\r\n  const handleUpdateTaskStatus = async (\r\n    e: ChangeEvent<HTMLInputElement>,\r\n    task?: Tasks\r\n  ) => {\r\n    if (!task || !task.content) return;\r\n    const updatedTask = {\r\n      ...task,\r\n      completed: e.target.checked,\r\n    };\r\n    try {\r\n      await updateTask(updatedTask);\r\n      setClientTasks(\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        clientTasks.map((task: any) =>\r\n          task.id === updatedTask.id ? updatedTask : task\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // this function create a new task with its content and default status to 'todo'\r\n  const handleCreateTask = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.currentTarget);\r\n    const content = formData.get('content') as string;\r\n\r\n    if (content.length === 0) return;\r\n    // reorder the tasks when the user create a new task\r\n    // like that the new task will be the first task with order 0\r\n    const reorderedTasks = clientTasks.map((task: Tasks, index: number) => {\r\n      task.order = index + 1;\r\n      return task;\r\n    });\r\n    const newTaskData = {\r\n      content,\r\n      completed: false,\r\n      eventId: eventId || null,\r\n    };\r\n    const response = await createTask(newTaskData);\r\n    if (response?.ok) {\r\n      setClientTasks([response.newTask as Tasks, ...reorderedTasks]);\r\n      (e.target as HTMLFormElement).reset();\r\n      // Adjust the width of the create task input\r\n      if (newTaskInputRef.current) {\r\n        newTaskInputRef.current.style.width = '100%';\r\n      }\r\n    }\r\n  };\r\n\r\n  // this function set the current content state and update the textarea height\r\n  const handleInputChange = (\r\n    e: ChangeEvent<HTMLTextAreaElement>,\r\n    index?: number\r\n  ) => {\r\n    if (typeof index === 'number') {\r\n      const updatedTasks = [...clientTasks];\r\n      updatedTasks[index] = { ...updatedTasks[index], content: e.target.value };\r\n      setClientTasks(updatedTasks);\r\n\r\n      const input = textareaRef.current[index];\r\n      if (input) {\r\n        input.style.height = '10px';\r\n        input.style.height = `${input.scrollHeight + 1}px`;\r\n      }\r\n    } else {\r\n      if (newTaskInputRef.current) {\r\n        newTaskInputRef.current.style.height = '10px';\r\n        newTaskInputRef.current.style.height = `${newTaskInputRef.current.scrollHeight + 1}px`;\r\n      }\r\n    }\r\n    setCurrentContent(e.target.value);\r\n  };\r\n  // TODO : improve this, because it cause a refresh of the page\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      const form = e.currentTarget.closest('form');\r\n      if (form) {\r\n        form.requestSubmit();\r\n      }\r\n    }\r\n  };\r\n  // this function is used to update the order of the tasks when the user drags and drops a task\r\n  const handleDragEnd = async () => {\r\n    try {\r\n      for (const task of clientTasks) {\r\n        await updateTask(task);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al actualizar el orden de las tareas', error);\r\n    }\r\n  };\r\n  // this function handle the drag visual order of the tasks\r\n  const handleReorderTasks = async (newOrder: Tasks[]) => {\r\n    const updatedTasks = newOrder.map((task: Tasks, index: number) => ({\r\n      ...task,\r\n      order: index + 1,\r\n    }));\r\n    setClientTasks(updatedTasks);\r\n  };\r\n  return (\r\n    <div className=\"w-full flex flex-col items-center flex-wrap sm:!items-start\">\r\n      <form\r\n        onSubmit={(e) => handleCreateTask(e)}\r\n        className=\"flex items-end gap-5 mb-2 w-full\"\r\n      >\r\n        <div className=\"flex w-full gap-5\">\r\n          <div className=\"flex gap-2 items-center\">\r\n            {/* TODO: poner icono de parametros o filtrado */}\r\n            <Icon\r\n              className=\"hover:text-red-600 dark:hover:text-dark-greenLight hover:scale-110\"\r\n              type=\"menu\"\r\n              width={35}\r\n            />\r\n            <button aria-label=\"Ajouter une tâche\">\r\n              <Icon\r\n                type=\"add\"\r\n                className=\"hover:text-red-600 dark:hover:text-dark-greenLight hover:scale-110\"\r\n                width={35}\r\n              />\r\n            </button>\r\n          </div>\r\n\r\n          <textarea\r\n            ref={newTaskInputRef}\r\n            name=\"content\"\r\n            placeholder=\"Nouvelle tâche\"\r\n            autoComplete=\"off\"\r\n            className=\"resize-none no-scrollbar w-[90%] bg-transparent ml-2 border-b focus:outline-none border-dark-bg dark:border-light-grey placeholder:text-black/50 placeholder:dark:text-dark-greenLight/50\"\r\n            onChange={(e) => handleInputChange(e)}\r\n            onKeyDown={(e) => handleKeyDown(e)}\r\n          />\r\n        </div>\r\n      </form>\r\n\r\n      {/* list of tasks */}\r\n      <form ref={tasksFormRef} className=\"w-full select-none\">\r\n        <Reorder.Group\r\n          axis=\"y\"\r\n          values={clientTasks}\r\n          onReorder={handleReorderTasks}\r\n        >\r\n          {clientTasks?.map((task: Tasks, index: number) => {\r\n            return (\r\n              <Reorder.Item\r\n                value={task}\r\n                onDragEnd={handleDragEnd}\r\n                className=\"flex gap-2 items-center mt-1\"\r\n                key={task.id}\r\n              >\r\n                <Icon\r\n                  onClick={() => handleDeleteTask(task.id as string)}\r\n                  type=\"delete\"\r\n                  className=\"hover:text-red-600 dark:hover:text-dark-greenLight hover:scale-110\"\r\n                />\r\n                <Icon type=\"draggable\" className=\"!cursor-grab\" />\r\n                <input\r\n                  aria-label=\"task-checkbox\"\r\n                  autoComplete=\"off\"\r\n                  className=\"peer\"\r\n                  type=\"checkbox\"\r\n                  defaultChecked={!!task.completed}\r\n                  onChange={(e) => handleUpdateTaskStatus(e, task)}\r\n                />\r\n                <textarea\r\n                  rows={1}\r\n                  ref={(el) => {\r\n                    if (el) textareaRef.current[index] = el;\r\n                  }}\r\n                  className=\"no-scrollbar resize-none w-full h-10px bg-transparent ml-2 my-1 border-b border-dark-bg dark:border-light-grey/50 focus:outline-none peer-checked:line-through decoration-2 decoration-light-red placeholder:text-light-blue placeholder:dark:text-dark-greenLight/50\"\r\n                  onFocus={(e) => {\r\n                    setCurrentTask(task);\r\n                    setCurrentContent(e.target.value);\r\n                  }} // Set task and content on focus on\r\n                  onChange={(e) => handleInputChange(e, index)} // Handle content change\r\n                  onBlur={handleUpdateTaskContent} // Save task content when user leaves the textarea\r\n                  onKeyDown={(e) => handleKeyDown(e)}\r\n                  defaultValue={task.content}\r\n                  placeholder=\"...\"\r\n                />\r\n              </Reorder.Item>\r\n            );\r\n          })}\r\n        </Reorder.Group>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["SelectUserList","users","takeUsers","closeModal","preSelectedUsers","selectedUserIds","setSelectedUserIds","useState","filterUser","setFilterUser","searchUsers","filter","filteredUsers","user","username","toLowerCase","includes","searchTerm","useEffect","document","body","classList","add","remove","handleUserSelection","prev","userId","id","div","className","header","p","input","type","onChange","e","target","value","placeholder","ul","length","map","li","onClick","UserAvatar","src","image","span","footer","button","confirmSelection","SearchBar","title","placeHolder","isOpen","setIsOpen","router","useRouter","searchParams","useSearchParams","searchValue","setSearchValue","get","handleSearch","useCallback","params","URLSearchParams","toString","set","delete","push","timeoutId","setTimeout","clearTimeout","Icon","width","h3","label","htmlFor","select","option","Badge","children","color","size","outline","rounded","variantClasses","primary","bg","text","ring","secondary","success","warning","error","info","outlineClasses","roundedClasses","small","medium","large","pill","circle","SubmitButton","loadingText","pending","useFormStatus","DeleteEventModal","eventId","toggleModal","handleSubmitDelete","preventDefault","deleteEvent","toast","console","redirect","h1","form","onSubmit","OwnerEventCard","event","contacts","cardOpen","setCardOpen","modalOpen","setModalOpen","isUserListOpen","setIsUserListOpen","daysFromToday","calculateDaysDifference","fechaActual","Date","Math","round","diferenciaTiempo","dateStart","getTime","eventStart","pendingTasks","tasks","task","completed","toggleDeleteModal","closeUserListModal","handleTakeUsers","selectedUsers","response","sendInvitationToEvent","participantsIds","ok","message","participants","strokeWidth","Link","href","AddToCalendarButton","TasksProfile","participant","SignOutButton","handleSignOut","clientTasks","setClientTasks","currentTask","setCurrentTask","currentContent","setCurrentContent","tasksFormRef","useRef","newTaskInputRef","textareaRef","forEach","index","current","style","height","scrollHeight","handleBeforeUnload","handleUpdateTaskContent","window","addEventListener","removeEventListener","handleDeleteTask","deleteUserTask","updatedTask","content","trim","result","updateTask","handleUpdateTaskStatus","checked","handleCreateTask","FormData","currentTarget","reorderedTasks","order","createTask","newTaskData","newTask","reset","handleInputChange","updatedTasks","handleKeyDown","key","closest","requestSubmit","handleDragEnd","handleReorderTasks","newOrder","aria-label","textarea","ref","name","autoComplete","onKeyDown","Reorder","axis","values","onReorder","onDragEnd","defaultChecked","rows","el","onFocus","onBlur","defaultValue"],"sourceRoot":"","ignoreList":[]}